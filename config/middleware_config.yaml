# Middleware Configuration for Inopli Correlator
# This is the new middleware architecture configuration

# Global middleware settings
enabled: true
polling_interval: 30  # seconds between polling cycles

# Alert processing settings
alert_processing:
  max_queue_size: 1000
  batch_size: 10
  timeout: 30  # seconds

# Connector configurations (only global settings)
connectors:
  wazuh:
    enabled: true
    file_monitoring: true
    buffer_size: 8192
    
  # Global connector settings (if any) - specific configs moved to tenants
  qradar:
    enabled: true  # Global enable/disable for QRadar connector type

# Logging and monitoring
monitoring:
  health_check_interval: 300  # seconds
  metrics_enabled: true
  debug_mode: false

# Multi-tenant configuration for middleware
tenants:
  tenant1:
    name: "Empresa A"
    token: "YOUR_TENANT1_TOKEN"
    siem_sources:
      wazuh:
        enabled: true
        module: "wazuh"
        file_path: "/var/ossec/logs/alerts/alerts.json"
        rule_filters:
          # Send all alerts with wildcard
          rule_ids: ["*"]
          # Or specify specific rule IDs
          # rule_ids: [100001, 100002, 81633]
        agent_filters:
          # Send from all agents with wildcard
          agent_ids: ["*"]
          # Or specify specific agent IDs
          # agent_ids: ["001", "002", "003"]
        alert_mode: "cti_only"  # all, cti_only, none
      
      # QRadar instance 1 - Production environment
      qradar_prod:
        enabled: true
        module: "qradar"
        connector_type: "qradar"  # Specify the connector type
        polling_interval: 5  # minutes between API calls
        api_config:
          base_url: "https://qradar-prod.company.com"
          auth_token: "YOUR_QRADAR_PROD_AUTH_TOKEN"
          api_version: "17"
          verify_ssl: true
          ssl_config:
            verify_cert: true
            check_hostname: true
            custom_cert_path: null  # Path to custom CA certificate if needed
        collection_control:
          last_offense_id: 0
          save_last_id: true
          id_file_path: "config/qradar_prod_last_id.json"
        batch_size: 100
        status_filter: "OPEN"  # OPEN, CLOSED, ALL
        rule_filters:
          # Filter by description patterns (QRadar uses description as rule_id)
          # Use partial string matching - any rule_id in this list will match if found in description
          rule_ids: ["AZUREAD", "MALWARE", "EDR", "Firewall"]
          # Examples of what will match:
          # - "SS-PE-SSO-CU-AZUREAD-LOGIN SATISFACTORIO DESDE ORIGEN MALICIOSO" (contains "AZUREAD")
          # - "SS-PE-SSO-CU-DETECCION RECURRENTE DE MALWARE" (contains "MALWARE")
          # - "SS-PE-SSO-CU-AMENAZA DETECTADA EN HOST POR EDR" (contains "EDR")
          # - "[SEC] - CSS - Conexiones sospechosas salientes - Firewall" (contains "Firewall")
          min_severity: 5  # Minimum severity level (0-10)
        source_filters:
          # Send from all source networks with wildcard
          source_networks: ["*"]
          # Or specify specific networks
          # source_networks: ["Vlan_25_Lab_Ingenieria.Vlan_25_Lab_Ingenieria"]
        alert_mode: "cti_only"  # all, cti_only, none
      
      # QRadar instance 2 - Development environment
      qradar_dev:
        enabled: true
        module: "qradar"
        connector_type: "qradar"  # Specify the connector type
        polling_interval: 10  # minutes between API calls
        api_config:
          base_url: "https://qradar-dev.company.com"
          auth_token: "YOUR_QRADAR_DEV_AUTH_TOKEN"
          api_version: "17"
          verify_ssl: false
          ssl_config:
            verify_cert: false
            check_hostname: false
            custom_cert_path: null
        collection_control:
          last_offense_id: 0
          save_last_id: true
          id_file_path: "config/qradar_dev_last_id.json"
        batch_size: 50
        status_filter: "OPEN"
        rule_filters:
          rule_ids: ["*"]  # All rules in dev
          min_severity: 3
        source_filters:
          source_networks: ["*"]
        alert_mode: "all"

  tenant2:
    name: "Empresa B"
    token: "YOUR_TENANT2_TOKEN"
    siem_sources:
      wazuh:
        enabled: false
        module: "wazuh"
        file_path: "/var/ossec/logs/alerts/alerts.json"
        rule_filters:
          rule_ids: [100001, 100002, 100003]
        agent_filters:
          agent_ids: ["001", "002"]
        alert_mode: "all"
      
      # QRadar instance for tenant2
      qradar_main:
        enabled: true
        module: "qradar"
        connector_type: "qradar"
        polling_interval: 15  # minutes between API calls
        api_config:
          base_url: "https://qradar-tenant2.company.com"
          auth_token: "YOUR_QRADAR_TENANT2_AUTH_TOKEN"
          api_version: "17"
          verify_ssl: true
          ssl_config:
            verify_cert: true
            check_hostname: true
            custom_cert_path: null
        collection_control:
          last_offense_id: 0
          save_last_id: true
          id_file_path: "config/qradar_tenant2_last_id.json"
        batch_size: 50
        status_filter: "OPEN"
        rule_filters:
          # Filter by specific description patterns for tenant2
          rule_ids: ["SS-PE-SSO-CU", "VPN", "SUSPICIOUS"]
          min_severity: 7
        source_filters:
          source_networks: ["Vlan_25_Lab_Ingenieria.Vlan_25_Lab_Ingenieria"]
        alert_mode: "all" 